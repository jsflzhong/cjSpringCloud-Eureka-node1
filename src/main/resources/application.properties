#########测试定义配置#########
#对应的取出该配置的配置类:com.michael.springBoot.tools.TestProperties
test1=jsflzhong
test2=Michael Anderson

#########log配置#########
#linux目录
#logging.path=/user/local/log
#windows目录
logging.path=c:/logs/springBootTestLog/
logging.level.com.favorites=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=ERROR
logging.level.com.michael.springBoot=ERROR

######### 数据库访问配置 #########
#注意,之所以DB信息在这里配置,而不再application.yml中配置,是因为那边的配置,经亲测,无法被其他xml文件导入.例如generatorConfig.xml中就无法导入.
#.yml中的DB信息也不用注释掉. 因为这个application.properties配置文件的优先级更高,同样的内容会覆盖掉那边的.
#其他的DB附属数据的配置,依然放在了.yml配置文件那边.
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name = com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf-8
spring.datasource.username = root
spring.datasource.password = root

#########对jsp的支持(已配置在application.yml)#########
## 页面默认前缀目录和后缀
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp

#########eureka#########
spring.application.name=spring-cloud-eureka
server.port=8080
#单点作为服务注册中心时,要禁用注册自己,即设为false.否则启动时会报错
#但是在需要多点互相注册时,这两项需要设为true.(默认的就是true)
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
#本项目作为eureka服务注册中心集群的第一节点(非eureka集群时,此项需注释掉)
eureka.instance.hostname=peer1
#单点时的配置:作为注册中心,指向自己.(多点时要注掉)
#eureka.client.serviceUrl.defaultZone=http://localhost:${server.port}/eureka/
#集群时的配置:指向其他的eureka点.(单点时要注掉)
eureka.client.serviceUrl.defaultZone=http://peer2:8081/eureka/
#关闭自我保护,避免不踢出已关停的节点的问题(生产建议打开)
eureka.server.enable-self-preservation=false
#清理间隔(毫秒)
eureka.server.eviction-interval-timer-in-ms=4000



